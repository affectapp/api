syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "affect/affiliate.proto";

package affect;

message Nonprofit {
    // The identifier of the entity.
    string nonprofit_id = 1;

    // The create time of the entity.
    google.protobuf.Timestamp create_time = 2;

    // The update time of the entity.
    google.protobuf.Timestamp update_time = 3;

    // Various fields about the nonprofit.
    string icon_url = 4;
    string name = 5;
    string ein = 6;
    string mission = 7;
    string category = 8;

    // Optional. The id of the affiliate for the nonprofit. This is
    // only populated if the nonprofit is affiliated with Affect.
    string affiliate_id = 9;
}

message GetNonprofitRequest {
    // The id of the nonprofit to request.
    string nonprofit_id = 1;
}

message ListNonprofitsRequest {
    // Optional. The page size, or maximum number of entities that will
    // be populated in the response. Bounded within the range [10, 100].
    int32 page_size = 1;

    // Optional. The page token, used to request a specific page.
    // Leave empty to request the first page.
    string page_token = 2;

    // Optional. Some filter to apply to the results.
    oneof filter {
        FilterBySearch filter_by_search = 4;
    }

    // Filters by some combination of search parameters.
    message FilterBySearch {
        string query = 1;
    }
}

message ListNonprofitsResponse {
    // Entities in the current page.
    repeated Nonprofit nonprofits = 1;

    // Optional. The next page token, used to fetch the subsequent
    // page.
    string next_page_token = 2;
    
    // Total number of entities.
    int64 total_count = 3;
}

service NonprofitService {
    // Returns a specific nonprofit.
    rpc GetNonprofit(GetNonprofitRequest) returns (Nonprofit) {}

    // Returns a paginated list of nonprofits.
    rpc ListNonprofits(ListNonprofitsRequest) returns (ListNonprofitsResponse) {}
}