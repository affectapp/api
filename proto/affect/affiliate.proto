syntax = "proto3";

import "google/protobuf/timestamp.proto";

package affect;

message Affiliate {
    // The identifier of the entity.
    string affiliate_id = 1;

    // The create time of the entity.
    google.protobuf.Timestamp create_time = 2;

    // The update time of the entity.
    google.protobuf.Timestamp update_time = 3;

    // The name of the affiliate's company.
    string company_name = 4;

    // The contact email of the affiliate.
    string contact_email = 5;

    // The business type of the affiliate.
    BusinessType business_type = 6;
}

enum BusinessType {
    BUSINESS_TYPE_UNSPECIFIED = 0;
    BUSINESS_TYPE_INDIVIDUAL = 1;
    BUSINESS_TYPE_COMPANY = 2;
    BUSINESS_TYPE_NONPROFIT = 3;
    BUSINESS_TYPE_GOVERNMENT_ENTITY = 4;
}

message CreateAffiliateRequest {
    string company_name = 1;
    string contact_email = 2;
    // Currently, only nonprofits are supported.
    BusinessType business_type = 3;
}

message GenerateAffiliateLinkRequest {
    // The id of the affiliate for which to generate the link.
    string affiliate_id = 1;

    // The type of link to generate.
    AffiliateLinkType type = 2;
}

// Link used for affiliates to manage their Stripe account.
// Typically single-use, must be regenerated if used.
message AffiliateLink {
    // The url pointing to the desired page.
    string url = 1;

    // The type of affiliate link.
    AffiliateLinkType type = 2;

    // Optional. Populated if the link expires.
    google.protobuf.Timestamp expire_time = 3;
}

enum AffiliateLinkType {
    AFFILIATE_LINK_TYPE_UNSPECIFIED = 0;
    AFFILIATE_LINK_TYPE_ONBOARDING = 1;
    AFFILIATE_LINK_TYPE_LOGIN = 2;
}

service AffiliateService {
    // Creates an affiliate.
    rpc CreateAffiliate(CreateAffiliateRequest) returns (Affiliate) {}
    
    // Generates an affiliate link.
    rpc GenerateAffiliateLink(GenerateAffiliateLinkRequest) returns (AffiliateLink) {}
}