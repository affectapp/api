syntax = "proto3";

import "google/protobuf/timestamp.proto";

package affect;

message UserId {
    string value = 1;
}

message User {
    // The identifier of the user.
    UserId user_id = 1;

    // The create time of the user.
    google.protobuf.Timestamp create_time = 2;

    // The update time of the user.
    google.protobuf.Timestamp update_time = 3;

    // The firebase UID of the user.
    string firebase_uid = 4;
}

message CreateUserRequest {
    // The firebase ID token of the user. This must be generated by 
    // clients using the Firebase client-side API, after authentication
    // with Firebase. The server will verify this ID token and use it
    // to fetch the Firebase user ID, etc.
    string firebase_id_token = 1;
}

message GetUserRequest {
    // The identifier of the user to get.
    oneof identifier {
        UserId user_id = 1;
        string firebase_user_id = 2;
    }
}

message ListUsersRequest {
    // Optional. The page size, or maximum number of users that will
    // be populated in the response. Bounded within the range [10, 100].
    int32 page_size = 1;

    // Optional. The page token, used to request a specific page.
    // Leave empty to request the first page.
    string page_token = 2;
}

message ListUsersResponse {
    // Users in the current page.
    repeated User users = 1;

    // Optional. The next page token, used to fetch the subsequent
    // page.
    string next_page_token = 2;
    
    // Total number of entities.
    int64 total_count = 3;
}

service UserService {
    // Creates a new user.
    rpc CreateUser(CreateUserRequest) returns (User) {}
    
    // Returns a specific user.
    rpc GetUser(GetUserRequest) returns (User) {}

    // Returns a paginated list of users.
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
}